{"version":3,"file":"static/js/335.824656ec.chunk.js","mappings":"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","sources":["components/AnimalInfoBoxLoginRegister/AnimalInfoBoxLoginRegister.styled.jsx","components/AnimalInfoBoxLoginRegister/AnimalInfoBoxLoginRegister.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: none;\n\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    gap: 8px;\n    position: absolute;\n    bottom: 97px;\n    left: 60px;\n    border-radius: 30px;\n    background-color: var(--light-color);\n    padding: 16px;\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  background-image: url(${props => props.img});\n  background-position: center;\n  background-size: cover;\n  width: 60px;\n  height: 60px;\n`;\n\nexport const DescriptionWrapper = styled.div`\n  width: 194px;\n`;\n\nexport const NameAndBirthdayWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nexport const Name = styled.span`\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.25;\n  letter-spacing: -0.03em;\n  color: var(--accent-color);\n`;\n\nexport const BirthdayTitle = styled.p`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: -0.02em;\n  color: rgba(38, 38, 38, 0.5);\n`;\n\nexport const BirthdayDate = styled.span`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: -0.02em;\n  color: var(--main-txt-color);\n`;\n\nexport const AnimalDescription = styled.p`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: -0.02em;\n  color: rgba(38, 38, 38, 0.8);\n`;\n","import {\n  ImageWrapper,\n  Wrapper,\n  DescriptionWrapper,\n  NameAndBirthdayWrapper,\n  Name,\n  BirthdayTitle,\n  BirthdayDate,\n  AnimalDescription,\n} from './AnimalInfoBoxLoginRegister.styled';\n\nexport const AnimalInfoBox = ({ animalInfo }) => {\n  const { img, name, birthday, description } = animalInfo;\n  return (\n    <Wrapper>\n      <ImageWrapper img={img} />\n      <DescriptionWrapper>\n        <NameAndBirthdayWrapper>\n          <Name>{name}</Name>\n          <BirthdayTitle>\n            Birthday:&nbsp;<BirthdayDate>{birthday}</BirthdayDate>\n          </BirthdayTitle>\n        </NameAndBirthdayWrapper>\n\n        <AnimalDescription>{description}</AnimalDescription>\n      </DescriptionWrapper>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nexport const FormWrapper = styled.div`\n  background-color: var(--light-color);\n  border-radius: 30px;\n  padding: 27px 20px;\n\n  @media screen and (min-width: 768px) {\n    border-radius: 60px;\n    padding: 30px 140px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 77px 84px;\n    width: 592px;\n    height: 654px;\n    box-sizing: border-box;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1;\n  letter-spacing: -0.04em;\n  color: var(--main-txt-color);\n  margin-bottom: 12px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 54px;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const SubTitle = styled.h2`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.29;\n  letter-spacing: -0.02em;\n  color: var(--main-txt-color);\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.22;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const FieldsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n    gap: 16px;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const Input = styled(Field)`\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.29;\n  letter-spacing: -0.03em;\n  color: rgba(38, 38, 38, 0.8);\n  border: 1px solid rgba(38, 38, 38, 0.15);\n  border-radius: 30px;\n  padding: 0 12px;\n  width: 100%;\n  height: 42px;\n  box-sizing: border-box;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.25;\n    padding: 0 16px;\n    height: 52px;\n  }\n\n  &::placeholder {\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 1.29;\n    letter-spacing: -0.03em;\n    color: rgba(38, 38, 38, 0.5);\n\n    @media screen and (min-width: 768px) {\n      font-size: 16px;\n      line-height: 1.25;\n    }\n  }\n`;\n\nexport const PasswordHideBtn = styled.button`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  background-color: transparent;\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    right: 15px;\n    width: 22px;\n    height: 22px;\n  }\n`;\n\nexport const PasswordIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 22px;\n    height: 22px;\n  }\n`;\n\nexport const ErrorWrapper = styled.span`\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: -0.03em;\n  color: #ef2447;\n\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n    line-height: 1.17;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  font-family: inherit;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.29;\n  letter-spacing: -0.03em;\n  text-transform: uppercase;\n  border: none;\n  border-radius: 30px;\n  background-color: var(--accent-color);\n  color: var(--light-color);\n  padding: 12px 0;\n  margin-bottom: 12px;\n  cursor: pointer;\n  transition: all var(--main-transition);\n\n  &:hover {\n    background-color: #f9b020;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.25;\n    padding: 16px 0;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const LoginLinkWrapper = styled.p`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: -0.03em;\n  color: rgba(38, 38, 38, 0.5);\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.43;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: -0.03em;\n  color: rgba(38, 38, 38, 0.5);\n  text-decoration: underline;\n  text-decoration-skip-ink: none;\n  color: var(--accent-color);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.43;\n  }\n`;\n","import * as Yup from 'yup';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  FormWrapper,\n  SubTitle,\n  Title,\n  StyledForm,\n  FieldsWrapper,\n  Input,\n  PasswordHideBtn,\n  PasswordIcon,\n  ErrorWrapper,\n  StyledButton,\n  LoginLinkWrapper,\n  Link,\n  InputWrapper,\n} from './RegisterForm.styled';\nimport { useState } from 'react';\n\nconst emailRegex = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  passwordConfirm: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required('Name is a required field'),\n  email: Yup.string()\n    .matches(emailRegex, 'Enter a valid Email')\n    .required('Email is a required field'),\n  password: Yup.string()\n    .min(7, 'Password must be at least 7 characters long.')\n    .required('Password is a required field'),\n  passwordConfirm: Yup.string()\n    .min(7, 'Password must be at least 7 characters long.')\n    .required('Password is a required field'),\n});\n\nexport const RegisterForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const toggleHidePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const submitForm = () => {};\n\n  return (\n    <FormWrapper>\n      <Title>Registration</Title>\n      <SubTitle>Thank you for your interest in our platform.</SubTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={submitForm}\n      >\n        <StyledForm>\n          <FieldsWrapper>\n            <label>\n              <InputWrapper>\n                <Input type=\"text\" name=\"name\" placeholder={'Name'} />\n              </InputWrapper>\n\n              <ErrorWrapper>\n                <ErrorMessage name=\"name\" />\n              </ErrorWrapper>\n            </label>\n\n            <label>\n              <InputWrapper>\n                <Input type=\"text\" name=\"email\" placeholder={'Email'} />\n              </InputWrapper>\n\n              <ErrorWrapper>\n                <ErrorMessage name=\"email\" />\n              </ErrorWrapper>\n            </label>\n\n            <label>\n              <InputWrapper>\n                <Input\n                  name=\"password\"\n                  placeholder={'Password'}\n                  type={showPassword ? 'text' : 'password'}\n                />\n                <PasswordHideBtn type=\"button\" onClick={toggleHidePassword}>\n                  <PasswordIcon\n                    width=\"18\"\n                    height=\"18\"\n                    viewBox=\"0 0 18 18\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <g clipPath=\"url(#clip0_55812_443)\">\n                      <path\n                        d=\"M13.455 13.455C12.1729 14.4322 10.6118 14.9736 9 15C3.75 15 0.75 8.99999 0.75 8.99999C1.68292 7.26141 2.97685 5.74244 4.545 4.54499M7.425 3.17999C7.94125 3.05915 8.4698 2.99874 9 2.99999C14.25 2.99999 17.25 8.99999 17.25 8.99999C16.7947 9.85169 16.2518 10.6535 15.63 11.3925M10.59 10.59C10.384 10.811 10.1356 10.9884 9.85962 11.1113C9.58362 11.2343 9.28568 11.3004 8.98357 11.3058C8.68146 11.3111 8.38137 11.2555 8.10121 11.1424C7.82104 11.0292 7.56654 10.8608 7.35289 10.6471C7.13923 10.4334 6.9708 10.1789 6.85763 9.89878C6.74447 9.61862 6.6889 9.31853 6.69423 9.01642C6.69956 8.71431 6.76568 8.41637 6.88866 8.14037C7.01163 7.86438 7.18894 7.61597 7.41 7.40999\"\n                        stroke=\"#F6B83D\"\n                        strokeWidth=\"1.5\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <path\n                        d=\"M0.75 0.75L17.25 17.25\"\n                        stroke=\"#F6B83D\"\n                        strokeWidth=\"1.5\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      />\n                    </g>\n                    <defs>\n                      <clipPath id=\"clip0_55812_443\">\n                        <rect width=\"18\" height=\"18\" fill=\"white\" />\n                      </clipPath>\n                    </defs>\n                  </PasswordIcon>\n                </PasswordHideBtn>\n              </InputWrapper>\n              <ErrorWrapper>\n                <ErrorMessage name=\"password\" />\n              </ErrorWrapper>\n            </label>\n\n            <label>\n              <InputWrapper>\n                <Input\n                  name=\"passwordConfirm\"\n                  placeholder={'Confirm password'}\n                  type={showPassword ? 'text' : 'password'}\n                />\n                <PasswordHideBtn type=\"button\" onClick={toggleHidePassword}>\n                  <PasswordIcon\n                    width=\"18\"\n                    height=\"18\"\n                    viewBox=\"0 0 18 18\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <g clipPath=\"url(#clip0_55812_443)\">\n                      <path\n                        d=\"M13.455 13.455C12.1729 14.4322 10.6118 14.9736 9 15C3.75 15 0.75 8.99999 0.75 8.99999C1.68292 7.26141 2.97685 5.74244 4.545 4.54499M7.425 3.17999C7.94125 3.05915 8.4698 2.99874 9 2.99999C14.25 2.99999 17.25 8.99999 17.25 8.99999C16.7947 9.85169 16.2518 10.6535 15.63 11.3925M10.59 10.59C10.384 10.811 10.1356 10.9884 9.85962 11.1113C9.58362 11.2343 9.28568 11.3004 8.98357 11.3058C8.68146 11.3111 8.38137 11.2555 8.10121 11.1424C7.82104 11.0292 7.56654 10.8608 7.35289 10.6471C7.13923 10.4334 6.9708 10.1789 6.85763 9.89878C6.74447 9.61862 6.6889 9.31853 6.69423 9.01642C6.69956 8.71431 6.76568 8.41637 6.88866 8.14037C7.01163 7.86438 7.18894 7.61597 7.41 7.40999\"\n                        stroke=\"#F6B83D\"\n                        strokeWidth=\"1.5\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <path\n                        d=\"M0.75 0.75L17.25 17.25\"\n                        stroke=\"#F6B83D\"\n                        strokeWidth=\"1.5\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      />\n                    </g>\n                    <defs>\n                      <clipPath id=\"clip0_55812_443\">\n                        <rect width=\"18\" height=\"18\" fill=\"white\" />\n                      </clipPath>\n                    </defs>\n                  </PasswordIcon>\n                </PasswordHideBtn>\n              </InputWrapper>\n              <ErrorWrapper>\n                <ErrorMessage name=\"passwordConfirm\" />\n              </ErrorWrapper>\n            </label>\n          </FieldsWrapper>\n          <StyledButton type=\"submit\">Registration</StyledButton>\n          <LoginLinkWrapper>\n            Already have an account?&nbsp;\n            <Link to=\"login\">Login</Link>\n          </LoginLinkWrapper>\n        </StyledForm>\n      </Formik>\n    </FormWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport imgMob from '../../images/register-mob.jpg';\nimport imgTab from '../../images/register-tab.jpg';\nimport imgDesk from '../../images/register-desk.jpg';\n\nexport const Wrapper = styled.section`\n  position: relative;\n  padding-bottom: 30px;\n\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    gap: 32px;\n  }\n`;\n\nexport const BgImageWrapper = styled.div`\n  background-image: url(${imgMob});\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 100%;\n  height: 280px;\n  border-radius: 30px;\n  overflow: hidden;\n  background-color: var(--accent-color);\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 768px) {\n    background-image: url(${imgTab});\n    height: 302px;\n    border-radius: 60px;\n    margin-bottom: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${imgDesk});\n    width: 592px;\n    height: 654px;\n    margin-bottom: 0;\n  }\n`;\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { BgImageWrapper, Wrapper } from './RegisterPage.styled';\nimport { AnimalInfoBox } from 'components/AnimalInfoBoxLoginRegister/AnimalInfoBoxLoginRegister';\nimport catImg from '../../images/cat-info-box.png';\n\nconst animalInfo = {\n  img: catImg,\n  name: 'Jack',\n  birthday: '18.10.2021',\n  description:\n    'Jack is a gray Persian cat with green eyes. He loves to be pampered and groomed, and enjoys playing with toys.',\n};\n\nexport default function RegisterPage() {\n  return (\n    <Wrapper>\n      <BgImageWrapper>\n        <AnimalInfoBox animalInfo={animalInfo} />\n      </BgImageWrapper>\n      <RegisterForm />\n    </Wrapper>\n  );\n}\n"],"names":["Wrapper","styled","ImageWrapper","props","img","DescriptionWrapper","NameAndBirthdayWrapper","Name","BirthdayTitle","BirthdayDate","AnimalDescription","AnimalInfoBox","animalInfo","name","birthday","description","FormWrapper","Title","SubTitle","StyledForm","Form","FieldsWrapper","InputWrapper","Input","Field","PasswordHideBtn","PasswordIcon","ErrorWrapper","StyledButton","LoginLinkWrapper","Link","NavLink","initialValues","email","password","passwordConfirm","validationSchema","Yup","shape","required","matches","min","RegisterForm","useState","showPassword","setShowPassword","toggleHidePassword","onSubmit","type","placeholder","onClick","width","height","viewBox","fill","xmlns","clipPath","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","id","to","BgImageWrapper","imgMob","imgTab","imgDesk","RegisterPage"],"sourceRoot":""}